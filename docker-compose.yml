version: '3.8'

services:
  db:
    image: postgres:15
    container_name: imdb-v2-postgres
    environment:
      POSTGRES_PASSWORD: imdbpass
      POSTGRES_USER: imdb
      POSTGRES_DB: imdb
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/01-create-schema.sql:/docker-entrypoint-initdb.d/01-create-schema.sql
      - ./imdb-data:/imdb-v2-data:ro
    command:
      - "postgres"
      - "-c"
      - "listen_addresses=*"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "work_mem=32MB"
      - "-c"
      - "max_wal_size=4GB"
      - "-c"
      - "checkpoint_timeout=15min"
      - "-c"
      - "maintenance_work_mem=256MB"
    networks:
      - imdb-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U imdb"]
      interval: 10s
      timeout: 5s
      retries: 3

  imdb-import:
    image: postgres:15
    container_name: imdb-v2-import
    depends_on:
      - db
    volumes:
      - ./init:/init
      - ./imdb-data:/imdb-v2-data:ro
    environment:
      PGHOST: db
      PGUSER: imdb
      PGPASSWORD: imdbpass
      PGDATABASE: imdb
    entrypoint: ["/init/02-import-data.sh"]
    networks:
      - imdb-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: imdb-v2-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - imdb-network
    depends_on:
      - db

volumes:
  postgres_data:

networks:
  imdb-network:
    driver: bridge
